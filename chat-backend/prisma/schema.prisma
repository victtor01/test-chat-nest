// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id       String @id @unique @default(uuid())
  name     String
  email    String @unique
  password String

  friends  User[] @relation("friends")
  friendOf User[] @relation("friends")

  sentFriendRequests     FriendRequest[] @relation("sender")
  receivedFriendRequests FriendRequest[] @relation("receiver")

  sendMessages     PrivateMessage[] @relation("sender")
  receivedMessages PrivateMessage[] @relation("receiver")

  profile Profile?

  @@map("users")
}

model PrivateMessage {
  id      String @id @unique @default(uuid())
  message String

  senderId   String
  sender     User   @relation("sender", fields: [senderId], references: [id])
  receiverId String
  receiver   User   @relation("receiver", fields: [receiverId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("private_messages")
}

model Profile {
  id       String @id @unique @default(uuid())
  nickname String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String @unique
  user   User   @relation(fields: [userId], references: [id])

  @@map("profiles")
}

model FriendRequest {
  id         String @id @default(uuid())
  senderId   String
  receiverId String

  sender   User @relation("sender", fields: [senderId], references: [id])
  receiver User @relation("receiver", fields: [receiverId], references: [id])

  @@map("friend_requests")
}
